After the modifications to docker-compose.yaml to get zookeeper quorum and zookeeper-broker communication over TLS
I tried a startup with
$ docker compose up -d
The zookeeper containers started up but the broker containers failed with a java.io.IOException: Invalid keystore format
root cause found in the logging.
A full stacktrace is printed in a separate file.
https://stackoverflow.com/questions/1052700/java-io-ioexception-invalid-keystore-format suggest a whole range of possible causes

I think the most probable cause is that the JDK / JRE of the zookeeper and broker images is of a different version
and vendor than the OpenJDK Temurin 17 from which I used the keytool to produce all broker keystores and truststores.

I think we should take special care with using a keytool from a JDK that is compatible with the one used with the broker
and zookeeper image (preferably the exact same JDK)

As a quick solution I shall replace the broker keystores and truststores I made with the Temurin 17 keytool with the ones
provided by the teacher.

------------------------------------------------------------------------------------------------------------------------
I created the broker keystores and truststores with the keytool of:
willem@linux-laptop:~/git/ps-securing-kafka/security$ java -XshowSettings:properties -version
Property settings:
    file.encoding = UTF-8
    file.separator = /
    java.class.path =
    java.class.version = 61.0
    java.home = /home/willem/.sdkman/candidates/java/17.0.4-tem
    java.io.tmpdir = /tmp
    java.library.path = /usr/java/packages/lib
        /usr/lib64
        /lib64
        /lib
        /usr/lib
    java.runtime.name = OpenJDK Runtime Environment
    java.runtime.version = 17.0.4+8
    java.specification.name = Java Platform API Specification
    java.specification.vendor = Oracle Corporation
    java.specification.version = 17
    java.vendor = Eclipse Adoptium
    java.vendor.url = https://adoptium.net/
    java.vendor.url.bug = https://github.com/adoptium/adoptium-support/issues
    java.vendor.version = Temurin-17.0.4+8
    java.version = 17.0.4
    java.version.date = 2022-07-19
    java.vm.compressedOopsMode = Zero based
    java.vm.info = mixed mode, sharing
    java.vm.name = OpenJDK 64-Bit Server VM
    java.vm.specification.name = Java Virtual Machine Specification
    java.vm.specification.vendor = Oracle Corporation
    java.vm.specification.version = 17
    java.vm.vendor = Eclipse Adoptium
    java.vm.version = 17.0.4+8
    jdk.debug = release
    line.separator = \n
    native.encoding = UTF-8
    os.arch = amd64
    os.name = Linux
    os.version = 5.15.0-46-generic
    path.separator = :
    sun.arch.data.model = 64
    sun.boot.library.path = /home/willem/.sdkman/candidates/java/17.0.4-tem/lib
    sun.cpu.endian = little
    sun.io.unicode.encoding = UnicodeLittle
    sun.java.launcher = SUN_STANDARD
    sun.jnu.encoding = UTF-8
    sun.management.compiler = HotSpot 64-Bit Tiered Compilers
    sun.stderr.encoding = UTF-8
    sun.stdout.encoding = UTF-8
    user.country = US
    user.dir = /home/willem/git/ps-securing-kafka/security
    user.home = /home/willem
    user.language = en
    user.name = willem

openjdk version "17.0.4" 2022-07-19
OpenJDK Runtime Environment Temurin-17.0.4+8 (build 17.0.4+8)
OpenJDK 64-Bit Server VM Temurin-17.0.4+8 (build 17.0.4+8, mixed mode, sharing)
----------------------
Inside the broker-1 container e.g.
willem@linux-laptop:~/git/ps-securing-kafka$ docker exec -it broker-1 bash
[kafka@broker-1 ~]$ java -XshowSettings:properties -version
Property settings:
    awt.toolkit = sun.awt.X11.XToolkit
    file.encoding = ANSI_X3.4-1968
    file.separator = /
    java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
    java.awt.printerjob = sun.print.PSPrinterJob
    java.class.path =
    java.class.version = 55.0
    java.home = /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64
    java.io.tmpdir = /tmp
    java.library.path = /usr/java/packages/lib
        /usr/lib64
        /lib64
        /lib
        /usr/lib
    java.runtime.name = OpenJDK Runtime Environment
    java.runtime.version = 11.0.8+10-LTS
    java.specification.name = Java Platform API Specification
    java.specification.vendor = Oracle Corporation
    java.specification.version = 11
    java.vendor = N/A
    java.vendor.url = https://openjdk.java.net/
    java.vendor.url.bug = https://bugreport.java.com/bugreport/
    java.vendor.version = 18.9
    java.version = 11.0.8
    java.version.date = 2020-07-14
    java.vm.compressedOopsMode = Zero based
    java.vm.info = mixed mode, sharing
    java.vm.name = OpenJDK 64-Bit Server VM
    java.vm.specification.name = Java Virtual Machine Specification
    java.vm.specification.vendor = Oracle Corporation
    java.vm.specification.version = 11
    java.vm.vendor = Oracle Corporation
    java.vm.version = 11.0.8+10-LTS
    jdk.debug = release
    line.separator = \n
    os.arch = amd64
    os.name = Linux
    os.version = 5.15.0-46-generic
    path.separator = :
    sun.arch.data.model = 64
    sun.boot.library.path = /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/lib
    sun.cpu.endian = little
    sun.cpu.isalist =
    sun.io.unicode.encoding = UnicodeLittle
    sun.java.launcher = SUN_STANDARD
    sun.jnu.encoding = ANSI_X3.4-1968
    sun.management.compiler = HotSpot 64-Bit Tiered Compilers
    sun.os.patch.level = unknown
    user.country = US
    user.dir = /kafka
    user.home = /kafka
    user.language = en
    user.name = kafka
    user.timezone =

openjdk version "11.0.8" 2020-07-14 LTS
OpenJDK Runtime Environment 18.9 (build 11.0.8+10-LTS)
OpenJDK 64-Bit Server VM 18.9 (build 11.0.8+10-LTS, mixed mode, sharing)
[kafka@broker-1 ~]$ exit
exit
willem@linux-laptop:~/git/ps-securing-kafka$

De docker image uses another vendor & version than our localhost JDK
java.vm.vendor = Oracle Corporation
java.vm.version = 11.0.8+10-LTS
sun.jnu.encoding = ANSI_X3.4-1968
versus
java.vm.vendor = Eclipse Adoptium
java.vm.version = 17.0.4+8
sun.jnu.encoding = UTF-8

I suspect the different value of the sun.jnu.encoding may be causing the keystore compatibility problems.

We have to be alert on this in our own poc.